{"version":3,"sources":["fbase.js","routes/Auth.js","routes/Profile.js","js/slider.js","routes/Main.js","components/Navigation.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","Auth","useState","email","setEmail","password","setPassword","newAccount","setNetAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Profile","signOut","slider_func","move","dir","Main","isLoggedIn","slider","className","href","data-slider-idx","data-slider-cnt","data-idx","Navigation","to","AppRouter","exact","path","from","App","init","setInit","setLogin","useEffect","onAuthStateChanged","user","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34a674e2.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n//import \"firebase/database\"\r\nimport \"firebase/firestore\"\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APPKEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID,\r\n    measurementId: \"G-KC8ZVWJEQR\"\r\n};\r\n\r\n//firebase.analytics();\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\n","import React, {useState} from \"react\";\r\nimport firebase, {authService} from \"fbase\"\r\n\r\nconst Auth = () => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [newAccount, setNetAccount] = useState(true);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst onChange = (event) => {\r\n\t\tconst {target:{name, value}} = event;\r\n\t\tconsole.log(event);\r\n\t\tif (name === \"email\") {\r\n\t\t\tsetEmail(value);\r\n\t\t} else if (name === \"password\") { \r\n\t\t\tsetPassword(value);\r\n\t\t}\r\n\t};\r\n\tconst onSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tlet data\r\n\t\t\tif(newAccount){\r\n\t\t\t\tdata = await authService.createUserWithEmailAndPassword(email, password)\r\n\t\t\t} else {\r\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(email, password)\r\n\t\t\t}\r\n\t\t\tconsole.log(data);\r\n\t\t} catch(error) {\r\n\t\t\tconsole.log(error.message);\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t};\r\n\tconst toggleAccount = () => {\r\n\t\tsetNetAccount((prev) => !prev);\r\n\t}\r\n\tconst onSocialClick = async (event) => {\r\n\t\ttry {\r\n\t\t\tconst { target: {name}, } = event\r\n\t\t\tlet provider;\r\n\t\t\tif(name === \"google\") {\r\n\t\t\t\tprovider = new firebase.auth.GoogleAuthProvider();\r\n\t\t\t} else if (name==\"github\") {\r\n\t\t\t\tprovider = new firebase.auth.GithubAuthProvider();\r\n\t\t\t}\r\n\t\t\tconst data = await authService.signInWithPopup(provider);\r\n\t\t\tconsole.log(data);\r\n\t\t} catch(error)\r\n\t\t{\r\n\t\t\tconsole.log(error.message)\r\n\t\t}\r\n\r\n\t}\r\n\treturn (\r\n\t<div>\r\n\t\t<form onSubmit={onSubmit}>\r\n\t\t\t<input name=\"email\" type=\"text\" placeholder=\"Email or ID\" required value={email}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<input name=\"password\" type=\"password\" placeholder=\"password\" required value={password}\r\n\t\t\t\tonChange={onChange}\t\r\n\t\t\t/>\r\n\t\t\t<input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />{error}\r\n\t\t</form>\r\n\t\t<span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create New Acount\"}</span>\r\n\t\t<div>\r\n\t\t\t<button name=\"google\" onClick={onSocialClick}>Continue with Google</button>\r\n\t\t\t<button name=\"github\" onClick={onSocialClick}>Continue with Github</button>\r\n\t\t</div>\r\n\t</div>\r\n)}\r\nexport default Auth;","import React from \"react\";\r\nimport {authService} from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n\t//const history = useHistory();\r\n\tconst onLogOutClick = () => {\r\n\t\tauthService.signOut();\r\n\t\t//history.push(\"/\");\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button onClick={onLogOutClick}>Log Out</button>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Profile;","const slider_func = {\r\n    move: (dir) => { \r\n        /*\r\n        let item = document.querySelector(\".slider ul\");\r\n        let left = 0;\r\n        if(item != null) {\r\n            let index = item.dataset.idx;\r\n            if(idx >= 1) {\r\n                if(dir = 1){\r\n                    \r\n                }\r\n            }\r\n            left = (-1) * item.offsetWidth * index;\r\n            console.log(\"slider_location :\" + left+\"/\"+item.style.left+\"index \"+index);\r\n            \r\n            //item.setAttribute(\"data-idx\",\"\"+)\r\n            //item.style.left = left+\"px\";\r\n        }\r\n        */\r\n    },\r\n}\r\n\r\nexport default slider_func\r\n","import React, { useState } from \"react\";\r\nimport \"css/App.scss\";\r\nimport \"css/public.scss\";\r\nimport slider from \"js/slider.js\";\r\n\r\nconst Main = ({isLoggedIn}) => {\r\n\tconst container = {\r\n\t\twidth: '120px'\r\n\t}\r\n\tconsole.log(\"slider\",slider.move);\r\n\treturn (\r\n\t\t<>\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>Container</div>\r\n\t\t\t<nav className=\"nav-menu\">\r\n\t\t\t\t<ul className=\"menu\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href='#'>메뉴1</a>\r\n\t\t\t\t\t\t<ul className=\"sub-menu\">\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href='#'>메뉴1</a>\r\n\t\t\t\t\t\t<ul className=\"sub-menu\">\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href='#'>메뉴1</a>\r\n\t\t\t\t\t\t<ul className=\"sub-menu\">\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href='#'>메뉴1</a>\r\n\t\t\t\t\t\t<ul className=\"sub-menu\">\r\n\t\t\t\t\t\t\t<li>소메뉴1</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t\t{/*banner*/}\r\n\t\t<div className=\"slider-container\" data-slider-idx=\"1\" data-slider-cnt=\"2\">\r\n\t\t\t<button className=\"slider-back\" onClick={slider.move(-1)}>뒤</button>\r\n\t\t\t<div className=\"slider\">\r\n\t\t\t\t<ul data-idx=\"1\">\r\n\t\t\t\t\t<li className=\"slider-img bg-black\"></li>\r\n\t\t\t\t\t<li className=\"slider-img bg-red\"></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"slider-prev\" onClick={slider.move(1)}>앞이다</button>\r\n\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Main;","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst Navigation = () => {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/profile\">My Profile</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Auth from 'routes/Auth'\r\nimport Temp from 'routes/Temp'\r\nimport Profile from 'routes/Profile'\r\nimport Main from 'routes/Main'\r\nimport Home from 'routes/Home'\r\nimport Navigation from 'components/Navigation'\r\n\r\nconst AppRouter = ({isLoggedIn}) => {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t{ isLoggedIn && <Navigation /> }\r\n\t\t\t<Switch>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t{/*<Temp/>*/}\r\n\t\t\t\t\t\t<Main/>\r\n\t\t\t\t\t\t{/*<Home/>*/}\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/profile\">\r\n\t\t\t\t\t\t<Profile />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t</>\r\n\t\t\t\t\t\r\n\t\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<Auth/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Redirect from=\"*\" to=\"/\" />\r\n\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default AppRouter","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from 'components/AppRouter';\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n\tconst [init, setInit] = useState(false);\r\n\tconst [isLoggedIn, setLogin] = useState(false);\r\n\t\r\n\tuseEffect(()=> {\r\n\t\tauthService.onAuthStateChanged((user)=>{\r\n\t\t\tif (user){\r\n\t\t\t\tsetLogin(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetLogin(false);\r\n\t\t\t}\r\n\t\t\tsetInit(true);\r\n\t\t})\r\n\t})\r\n  \treturn (\r\n    \t<>\r\n\t\t\r\n\t\t{init ? <AppRouter isLoggedIn={isLoggedIn}/> : \"Initializing...\"}\r\n\t\t<footer>&copy; Community {new Date().getFullYear()}</footer>\r\n    \t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport firebase from 'fbase';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}