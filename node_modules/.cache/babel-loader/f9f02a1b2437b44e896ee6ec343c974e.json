{"ast":null,"code":"var _jsxFileName = \"/workspace/community/src/routes/Auth.js\";\nimport React, { useState } from \"react\";\nimport firebase, { authService, fInstance } from \"fbase\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNetAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n    console.log(event);\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n\n      console.log(data);\n    } catch (error) {\n      console.log(error.message);\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNetAccount(prev => !prev);\n  };\n\n  const onSocialClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === \"google\") {\n      provider = new firebase.auth.GoogleAuthProvider();\n    } else if (name == \"github\") {\n      provider = new firebase.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    type: \"text\",\n    placeholder: \"Email or ID\",\n    required: true,\n    value: email,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"password\",\n    required: true,\n    value: password,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: newAccount ? \"Create Account\" : \"Log In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }), error), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: toggleAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, newAccount ? \"Sign In\" : \"Create New Acount\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    name: \"google\",\n    onClick: onSocialClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, \"Continue with Google\"), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"github\",\n    onClick: onSocialClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, \">Continue with Github\")));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/workspace/community/src/routes/Auth.js"],"names":["React","useState","firebase","authService","fInstance","Auth","email","setEmail","password","setPassword","newAccount","setNetAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","preventDefault","data","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","toggleAccount","prev","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport firebase, {authService, fInstance} from \"fbase\"\n\nconst Auth = () => {\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [newAccount, setNetAccount] = useState(true);\n\tconst [error, setError] = useState(\"\");\n\tconst onChange = (event) => {\n\t\tconst {target:{name, value}} = event;\n\t\tconsole.log(event);\n\t\tif (name === \"email\") {\n\t\t\tsetEmail(value);\n\t\t} else if (name === \"password\") { \n\t\t\tsetPassword(value);\n\t\t}\n\t};\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tlet data\n\t\t\tif(newAccount){\n\t\t\t\tdata = await authService.createUserWithEmailAndPassword(email, password)\n\t\t\t} else {\n\t\t\t\tdata = await authService.signInWithEmailAndPassword(email, password)\n\t\t\t}\n\t\t\tconsole.log(data);\n\t\t} catch(error) {\n\t\t\tconsole.log(error.message);\n\t\t\tsetError(error.message);\n\t\t}\n\t};\n\tconst toggleAccount = () => {\n\t\tsetNetAccount((prev) => !prev);\n\t}\n\tconst onSocialClick = async (event) => {\n\t\tconst { target: {name}, } = event\n\t\tlet provider;\n\t\tif(name === \"google\") {\n\t\t\tprovider = new firebase.auth.GoogleAuthProvider();\n\t\t} else if (name==\"github\") {\n\t\t\tprovider = new firebase.auth.GithubAuthProvider();\n\t\t}\n\t\tconst data = await authService.signInWithPopup(provider);\n\t\tconsole.log(data);\n\t}\n\treturn (\n\t<div>\n\t\t<form onSubmit={onSubmit}>\n\t\t\t<input name=\"email\" type=\"text\" placeholder=\"Email or ID\" required value={email}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<input name=\"password\" type=\"password\" placeholder=\"password\" required value={password}\n\t\t\t\tonChange={onChange}\t\n\t\t\t/>\n\t\t\t<input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />{error}\n\t\t</form>\n\t\t<span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create New Acount\"}</span>\n\t\t<div>\n\t\t\t<button name=\"google\" onClick={onSocialClick}>Continue with Google</button>\n\t\t\t<button name=\"github\" onClick={onSocialClick}>>Continue with Github</button>\n\t\t</div>\n\t</div>\n)}\nexport default Auth;"]},"metadata":{},"sourceType":"module"}